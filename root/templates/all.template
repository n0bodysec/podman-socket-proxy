server {
    listen 2375 default_server;
    #!ALLOW_IPV6listen [::]:2375 default_server;

    server_name _;

    set $dockersocket $SOCKET_PATH;
    set $path_restarts $ALLOW_RESTARTS;
    set $path_stop $ALLOW_STOP;
    set $path_start $ALLOW_START;
    set $path_auth $AUTH;
    set $path_build $BUILD;
    set $path_commit $COMMIT;
    set $path_configs $CONFIGS;
    set $path_containers $CONTAINERS;
    set $path_distribution $DISTRIBUTION;
    set $path_events $EVENTS;
    set $path_exec $EXEC;
    set $path_images $IMAGES;
    set $path_info $INFO;
    set $path_networks $NETWORKS;
    set $path_nodes $NODES;
    set $path_ping $PING;
    set $path_plugins $PLUGINS;
    set $path_secrets $SECRETS;
    set $path_services $SERVICES;
    set $path_session $SESSION;
    set $path_swarm $SWARM;
    set $path_system $SYSTEM;
    set $path_tasks $TASKS;
    set $path_version $VERSION;
    set $path_volumes $VOLUMES;

    include /etc/nginx/proxy.conf;

    proxy_read_timeout $PROXY_READ_TIMEOUT;

    location ~* #!REGEX/containers/[a-zA-Z0-9_.-]+/start {if ($path_start = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/containers/[a-zA-Z0-9_.-]+/stop {if ($path_stop = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/containers/[a-zA-Z0-9_.-]+/(stop|restart|kill) {if ($path_restarts = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/auth {limit_except #!LIMIT_METHODS {deny all;}if ($path_auth = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/build {limit_except #!LIMIT_METHODS {deny all;}if ($path_build = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/commit {limit_except #!LIMIT_METHODS {deny all;}if ($path_commit = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/configs {limit_except #!LIMIT_METHODS {deny all;}if ($path_configs = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/containers {limit_except #!LIMIT_METHODS {deny all;}if ($path_containers = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/distribution {limit_except #!LIMIT_METHODS {deny all;}if ($path_distribution = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/events {limit_except #!LIMIT_METHODS {deny all;}if ($path_events = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/exec {limit_except #!LIMIT_METHODS {deny all;}if ($path_exec = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/images {limit_except #!LIMIT_METHODS {deny all;}if ($path_images = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/info {limit_except #!LIMIT_METHODS {deny all;}if ($path_info = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/networks {limit_except #!LIMIT_METHODS {deny all;}if ($path_networks = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/nodes {limit_except #!LIMIT_METHODS {deny all;}if ($path_nodes = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/_ping {limit_except #!LIMIT_METHODS {deny all;}if ($path_ping = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/plugins {limit_except #!LIMIT_METHODS {deny all;}if ($path_plugins = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/secrets {limit_except #!LIMIT_METHODS {deny all;}if ($path_secrets = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/services {limit_except #!LIMIT_METHODS {deny all;}if ($path_services = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/session {limit_except #!LIMIT_METHODS {deny all;}if ($path_session = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/swarm {limit_except #!LIMIT_METHODS {deny all;}if ($path_swarm = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/system {limit_except #!LIMIT_METHODS {deny all;}if ($path_system = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/tasks {limit_except #!LIMIT_METHODS {deny all;}if ($path_tasks = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/version {limit_except #!LIMIT_METHODS {deny all;}if ($path_version = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location ~* #!REGEX/volumes {limit_except #!LIMIT_METHODS {deny all;}if ($path_volumes = 0){return 403;}proxy_pass http://unix:$dockersocket;}
    location / {return 403;}
}
